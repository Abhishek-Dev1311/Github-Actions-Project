name: CICD Pipeline

on:
  push:
    branches:
      - main

jobs:
  compile:
    runs-on: self-hosted
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn clean install -DskipTests

    - name: Upload JAR as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-jar
        path: target/*.jar


  security-check:
    runs-on: self-hosted
    needs: compile

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Install Trivy (Security Scan)
      run: |
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install -y trivy

    - name: Run Trivy FS Scan
      run: trivy fs --format table -o fs-report.json .
      
    - name: Upload Trivy Report
      uses: actions/upload-artifact@v3
      with:
        name: trivy-report
        path: fs-report.json


  build_docker_image_and_push:
    runs-on: self-hosted
    needs: security-check

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: app  # Download the artifact (JAR) into the `app/` directory

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/bankapp:latest
        file: ./Dockerfile

  deploy:
    runs-on: self-hosted
    needs: build_docker_image_and_push

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Deploy to Server or Kubernetes
      run: |
        echo "Deploying the application..."  # Here you can add your deployment script (e.g., kubectl commands or SSH commands for server deployment)
